<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('flwg_php')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_flwg_php.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('flwg_php.so')) return;
    } else {
      if (!dl('flwg_php.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class flwg_php {
	static function ChooseFirstWord($IntToWord_HashMap) {
		ChooseFirstWord($IntToWord_HashMap);
	}

	static function Allocate_IntToWordStruct() {
		return Allocate_IntToWordStruct();
	}

	static function Allocate_WordToInt() {
		return Allocate_WordToInt();
	}

	static function Initialize_HashMaps($WordToInt_HashMap,$IntToWord_HashMap,$path) {
		Initialize_HashMaps($WordToInt_HashMap,$IntToWord_HashMap,$path);
	}

	static function Free_HashMaps($WordToInt_HashMap,$IntToWord_HashMap) {
		Free_HashMaps($WordToInt_HashMap,$IntToWord_HashMap);
	}

	static function Convert_WordToInt($word,$WordToInt_HashMap) {
		return Convert_WordToInt($word,$WordToInt_HashMap);
	}

	static function Convert_IntToWord($wordID,$IntToWord_HashMap) {
		return Convert_IntToWord($wordID,$IntToWord_HashMap);
	}

	static function init_WordSet($totalWords) {
		return init_WordSet($totalWords);
	}

	static function reset_WordSet($wordSet) {
		reset_WordSet($wordSet);
	}

	static function checkIfUsed_WordSet($wordID,$wordSet) {
		return checkIfUsed_WordSet($wordID,$wordSet);
	}

	static function markUsed_WordSet($wordID,$wordSet) {
		markUsed_WordSet($wordID,$wordSet);
	}

	static function free_WordSet($wordSet) {
		free_WordSet($wordSet);
	}

	static function botPly($word,$depth,$IntToWord_HashMap,$wordSet) {
		return botPly($word,$depth,$IntToWord_HashMap,$wordSet);
	}
}

/* PHP Proxy Classes */

